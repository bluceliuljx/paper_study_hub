

https://arxiv.org/pdf/2004.11362

https://github.com/HobbitLong/SupContrast


https://github.com/google-research/google-research/tree/master/supcon



在yolov8 中的rtdetr中比较好用

```

class SupConLoss(nn.Module):
    def __init__(self, temperature=0.07):
        super(SupConLoss, self).__init__()
        self.temperature = temperature

    def forward(self, features, labels):
        """
        features: (batch_size, feature_dim)  提取的特征
        labels: (batch_size)  真实类别标签
        """
        batch_size = features.shape[0]
        labels = labels.contiguous().view(-1, 1)  # (batch_size, 1)

        # 计算余弦相似度
        similarity_matrix = F.cosine_similarity(features.unsqueeze(1), features.unsqueeze(0), dim=2)

        # 生成类别 mask
        mask = torch.eq(labels, labels.T).float().to(features.device)

        # 计算对比损失
        logits = similarity_matrix / self.temperature
        exp_logits = torch.exp(logits)  # 归一化

        # 计算正样本相似度
        log_prob = logits - torch.log(exp_logits.sum(dim=1, keepdim=True))
        loss = - (mask * log_prob).sum(dim=1) / mask.sum(dim=1)

        return loss.mean()



supcon_loss = SupConLoss(temperature=0.07)
loss = supcon_loss(features, cls_targets)


```


